groups:
  # ==============================================================================
  # COST OPTIMIZATION MONITORING RULES ($400K SAVINGS VALIDATION)
  # ==============================================================================
  
  - name: cost.optimization.tracking
    interval: 300s  # 5-minute intervals for cost tracking
    rules:
      # Daily Resource Cost Calculations
      - record: cost:daily_cpu_cost_usd
        expr: |
          # Current consolidated CPU usage * hourly cost rate * 24 hours
          sum(rate(container_cpu_usage_seconds_total{name=~".*aiwfe.*"}[1h])) * 
          0.0464 * 24  # AWS t3.medium hourly CPU cost

      - record: cost:daily_memory_cost_usd
        expr: |
          # Current consolidated memory usage in GB * hourly cost rate * 24 hours
          (sum(container_memory_usage_bytes{name=~".*aiwfe.*"}) / 1073741824) * 
          0.0058 * 24  # AWS memory cost per GB-hour

      - record: cost:daily_storage_cost_usd
        expr: |
          # Database and volume storage costs
          (sum(container_fs_usage_bytes{name=~".*aiwfe.*"}) / 1073741824) * 
          0.10 / 30  # EBS storage cost per GB per month / 30 days

      # Historical Baseline (Pre-Consolidation Estimated Costs)
      - record: cost:baseline_daily_cpu_cost_usd
        expr: 31 * 0.5 * 0.0464 * 24  # 31 services * 0.5 CPU * hourly rate * 24h

      - record: cost:baseline_daily_memory_cost_usd
        expr: 31 * 8 * 0.0058 * 24  # 31 services * 8GB * hourly rate * 24h

      - record: cost:baseline_daily_storage_cost_usd
        expr: 31 * 20 * 0.10 / 30  # 31 services * 20GB * monthly cost / 30 days

  # ==============================================================================
  # COST SAVINGS CALCULATION RULES
  # ==============================================================================

  - name: cost.savings.calculation
    interval: 600s  # 10-minute intervals
    rules:
      # Daily Savings Calculations
      - record: cost:daily_cpu_savings_usd
        expr: |
          cost:baseline_daily_cpu_cost_usd - cost:daily_cpu_cost_usd

      - record: cost:daily_memory_savings_usd
        expr: |
          cost:baseline_daily_memory_cost_usd - cost:daily_memory_cost_usd

      - record: cost:daily_storage_savings_usd
        expr: |
          cost:baseline_daily_storage_cost_usd - cost:daily_storage_cost_usd

      - record: cost:total_daily_savings_usd
        expr: |
          cost:daily_cpu_savings_usd + 
          cost:daily_memory_savings_usd + 
          cost:daily_storage_savings_usd

      # Monthly and Annual Projections
      - record: cost:monthly_savings_projection_usd
        expr: cost:total_daily_savings_usd * 30

      - record: cost:annual_savings_projection_usd
        expr: cost:total_daily_savings_usd * 365

      # Savings Percentage
      - record: cost:savings_percentage
        expr: |
          (
            cost:total_daily_savings_usd / 
            (cost:baseline_daily_cpu_cost_usd + cost:baseline_daily_memory_cost_usd + cost:baseline_daily_storage_cost_usd)
          ) * 100

  # ==============================================================================
  # COST OPTIMIZATION TARGET ALERTS
  # ==============================================================================

  - name: cost.optimization.alerts
    interval: 3600s  # Hourly checks
    rules:
      # $400K Annual Target Achievement
      - alert: CostOptimizationTargetAchieved
        expr: cost:annual_savings_projection_usd >= 400000
        for: 24h
        labels:
          severity: info
          category: cost-optimization
          target: "400k-annual"
        annotations:
          summary: "$400K annual cost optimization target achieved"
          description: "Projected annual savings: ${{ $value | humanize }}"
          impact: "Cost optimization target successfully met"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/target-achieved"

      # Progress Toward $400K Target
      - alert: CostOptimizationProgressGood
        expr: cost:annual_savings_projection_usd >= 300000 and cost:annual_savings_projection_usd < 400000
        for: 12h
        labels:
          severity: info
          category: cost-optimization
          target: "progress"
        annotations:
          summary: "Good progress toward $400K cost optimization target"
          description: "Projected annual savings: ${{ $value | humanize }} (75% of target)"
          impact: "On track for cost optimization goals"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/progress-good"

      # Warning: Not Meeting Cost Targets
      - alert: CostOptimizationTargetAtRisk
        expr: cost:annual_savings_projection_usd < 200000
        for: 6h
        labels:
          severity: medium
          category: cost-optimization
          target: "at-risk"
        annotations:
          summary: "Cost optimization target at risk"
          description: "Projected annual savings: ${{ $value | humanize }} (50% of $400K target)"
          impact: "May not meet cost optimization goals, review needed"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/target-at-risk"

      # Critical: Negative Savings (Cost Increase)
      - alert: CostOptimizationNegative
        expr: cost:total_daily_savings_usd < 0
        for: 2h
        labels:
          severity: high
          category: cost-optimization
          target: "negative"
        annotations:
          summary: "Cost optimization showing negative savings"
          description: "Daily cost increase: ${{ $value | humanize }}"
          impact: "CRITICAL: Consolidation resulting in higher costs, immediate review required"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/negative-savings"

  # ==============================================================================
  # RESOURCE EFFICIENCY MONITORING
  # ==============================================================================

  - name: cost.resource.efficiency
    interval: 300s
    rules:
      # Resource Utilization Efficiency
      - record: cost:cpu_efficiency_percentage
        expr: |
          (
            sum(rate(container_cpu_usage_seconds_total{name=~".*aiwfe.*"}[5m])) /
            sum(container_spec_cpu_quota{name=~".*aiwfe.*"} / container_spec_cpu_period{name=~".*aiwfe.*"})
          ) * 100

      - record: cost:memory_efficiency_percentage
        expr: |
          (
            sum(container_memory_usage_bytes{name=~".*aiwfe.*"}) /
            sum(container_spec_memory_limit_bytes{name=~".*aiwfe.*"})
          ) * 100

      # Efficiency Alerts (Target: 70-80% utilization for cost optimization)
      - alert: ResourceEfficiencyOptimal
        expr: |
          cost:cpu_efficiency_percentage >= 70 and cost:cpu_efficiency_percentage <= 80 and
          cost:memory_efficiency_percentage >= 70 and cost:memory_efficiency_percentage <= 80
        for: 30m
        labels:
          severity: info
          category: efficiency
          optimization: "optimal"
        annotations:
          summary: "Resource efficiency in optimal range"
          description: "CPU: {{ $labels.cpu_eff }}%, Memory: {{ $labels.mem_eff }}%"
          impact: "Excellent resource utilization for cost optimization"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/efficiency-optimal"

      - alert: ResourceEfficiencySuboptimal
        expr: |
          cost:cpu_efficiency_percentage < 50 or cost:memory_efficiency_percentage < 50
        for: 2h
        labels:
          severity: medium
          category: efficiency
          optimization: "suboptimal"
        annotations:
          summary: "Resource efficiency below optimal range"
          description: "CPU: {{ $labels.cpu_eff }}%, Memory: {{ $labels.mem_eff }}%"
          impact: "Resources underutilized, potential for further consolidation"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/efficiency-suboptimal"

  # ==============================================================================
  # COST MONITORING SERVICE HEALTH
  # ==============================================================================

  - name: cost.monitoring.health
    interval: 600s
    rules:
      # Cost Metrics Collection Health
      - alert: CostMetricsCollectionDown
        expr: up{job="resource-cost-tracking"} == 0
        for: 15m
        labels:
          severity: high
          category: monitoring
          cost: "tracking"
        annotations:
          summary: "Cost metrics collection is down"
          description: "Cannot collect resource usage data for cost tracking"
          impact: "No visibility into cost optimization progress"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/metrics-collection-down"

      # Cost Calculation Data Integrity
      - alert: CostCalculationDataMissing
        expr: |
          absent(cost:total_daily_savings_usd) or 
          absent(cost:annual_savings_projection_usd)
        for: 30m
        labels:
          severity: medium
          category: monitoring
          cost: "calculation"
        annotations:
          summary: "Cost calculation data missing"
          description: "Cost optimization metrics not being calculated"
          impact: "Cannot track progress toward $400K savings target"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/calculation-data-missing"

  # ==============================================================================
  # DETAILED COST BREAKDOWN RULES
  # ==============================================================================

  - name: cost.breakdown.detailed
    interval: 3600s  # Hourly detailed calculations
    rules:
      # Service-Level Cost Breakdown
      - record: cost:service_cpu_cost_breakdown
        expr: |
          sum(rate(container_cpu_usage_seconds_total{name=~".*aiwfe.*"}[1h])) by (name) * 
          0.0464 * 24

      - record: cost:service_memory_cost_breakdown
        expr: |
          sum(container_memory_usage_bytes{name=~".*aiwfe.*"}) by (name) / 1073741824 * 
          0.0058 * 24

      # Infrastructure Component Costs
      - record: cost:database_infrastructure_cost_usd
        expr: |
          (
            sum(container_memory_usage_bytes{name=~".*postgres.*"}) / 1073741824 * 0.0058 +
            sum(rate(container_cpu_usage_seconds_total{name=~".*postgres.*"}[1h])) * 0.0464
          ) * 24

      - record: cost:cache_infrastructure_cost_usd
        expr: |
          (
            sum(container_memory_usage_bytes{name=~".*redis.*"}) / 1073741824 * 0.0058 +
            sum(rate(container_cpu_usage_seconds_total{name=~".*redis.*"}[1h])) * 0.0464
          ) * 24

      - record: cost:ai_infrastructure_cost_usd
        expr: |
          (
            sum(container_memory_usage_bytes{name=~".*ollama.*"}) / 1073741824 * 0.0058 +
            sum(rate(container_cpu_usage_seconds_total{name=~".*ollama.*"}[1h])) * 0.0464
          ) * 24

  # ==============================================================================
  # COST OPTIMIZATION TREND ANALYSIS
  # ==============================================================================

  - name: cost.optimization.trends
    interval: 1800s  # 30-minute intervals
    rules:
      # 7-Day Cost Trend
      - record: cost:weekly_savings_trend
        expr: |
          avg_over_time(cost:total_daily_savings_usd[7d])

      # Cost Optimization Acceleration
      - record: cost:savings_acceleration
        expr: |
          (
            cost:total_daily_savings_usd - 
            avg_over_time(cost:total_daily_savings_usd[7d])
          )

      # Trend Alert: Declining Savings
      - alert: CostSavingsTrendDeclining
        expr: cost:savings_acceleration < -50
        for: 3h
        labels:
          severity: medium
          category: trend
          cost: "declining"
        annotations:
          summary: "Cost savings trend declining"
          description: "Daily savings decreasing by ${{ $value | humanize }} compared to 7-day average"
          impact: "Cost optimization effectiveness declining, investigation needed"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/cost/savings-declining"