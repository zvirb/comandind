groups:
  # ==============================================================================
  # APPLICATION PERFORMANCE MONITORING RULES
  # ==============================================================================
  
  - name: fastapi.application.rules
    interval: 30s
    rules:
      # FastAPI Response Time Alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="fastapi-api"}[5m])) > 2.0
        for: 2m
        labels:
          severity: high
          service: api
          category: performance
        annotations:
          summary: "FastAPI high response time detected"
          description: "95th percentile response time is {{ $value }}s for service {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/performance/high-response-time"

      - alert: VeryHighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="fastapi-api"}[5m])) > 5.0
        for: 1m
        labels:
          severity: critical
          service: api
          category: performance
        annotations:
          summary: "FastAPI very high response time detected"
          description: "95th percentile response time is {{ $value }}s for service {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/performance/very-high-response-time"

      # FastAPI Error Rate Alerts
      - alert: HighErrorRate
        expr: (rate(http_requests_total{job="fastapi-api",status=~"5.."}[5m]) / rate(http_requests_total{job="fastapi-api"}[5m])) * 100 > 5
        for: 3m
        labels:
          severity: high
          service: api
          category: reliability
        annotations:
          summary: "FastAPI high error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/reliability/high-error-rate"

      - alert: CriticalErrorRate
        expr: (rate(http_requests_total{job="fastapi-api",status=~"5.."}[5m]) / rate(http_requests_total{job="fastapi-api"}[5m])) * 100 > 15
        for: 1m
        labels:
          severity: critical
          service: api
          category: reliability
        annotations:
          summary: "FastAPI critical error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/reliability/critical-error-rate"

      # API Service Availability
      - alert: APIServiceDown
        expr: up{job="fastapi-api"} == 0
        for: 1m
        labels:
          severity: critical
          service: api
          category: availability
        annotations:
          summary: "FastAPI service is down"
          description: "FastAPI service {{ $labels.instance }} is not responding to health checks"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/availability/service-down"

      # Request Rate Anomalies
      - alert: UnusuallyHighRequestRate
        expr: rate(http_requests_total{job="fastapi-api"}[5m]) > (avg_over_time(rate(http_requests_total{job="fastapi-api"}[5m])[1h:5m]) * 3)
        for: 5m
        labels:
          severity: medium
          service: api
          category: performance
        annotations:
          summary: "Unusually high request rate detected"
          description: "Current request rate {{ $value | humanize }}req/s is 3x higher than usual for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/performance/high-request-rate"

      - alert: UnusuallyLowRequestRate
        expr: rate(http_requests_total{job="fastapi-api"}[15m]) < (avg_over_time(rate(http_requests_total{job="fastapi-api"}[5m])[1h:5m]) * 0.1) and avg_over_time(rate(http_requests_total{job="fastapi-api"}[5m])[1h:5m]) > 0.1
        for: 10m
        labels:
          severity: medium
          service: api
          category: performance
        annotations:
          summary: "Unusually low request rate detected"
          description: "Current request rate {{ $value | humanize }}req/s is 90% lower than usual for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/performance/low-request-rate"

  # ==============================================================================
  # WORKER SERVICE MONITORING RULES
  # ==============================================================================

  - name: worker.application.rules
    interval: 30s
    rules:
      # Worker Queue Depth
      - alert: HighWorkerQueueDepth
        expr: celery_task_sent_total - celery_task_succeeded_total - celery_task_failed_total - celery_task_rejected_total - celery_task_revoked_total > 50
        for: 5m
        labels:
          severity: high
          service: worker
          category: performance
        annotations:
          summary: "High worker queue depth detected"
          description: "Worker queue has {{ $value }} pending tasks for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/worker/high-queue-depth"

      - alert: CriticalWorkerQueueDepth
        expr: celery_task_sent_total - celery_task_succeeded_total - celery_task_failed_total - celery_task_rejected_total - celery_task_revoked_total > 200
        for: 2m
        labels:
          severity: critical
          service: worker
          category: performance
        annotations:
          summary: "Critical worker queue depth detected"
          description: "Worker queue has {{ $value }} pending tasks for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/worker/critical-queue-depth"

      # Worker Task Failure Rate
      - alert: HighWorkerTaskFailureRate
        expr: (rate(celery_task_failed_total[5m]) / rate(celery_task_sent_total[5m])) * 100 > 10
        for: 5m
        labels:
          severity: high
          service: worker
          category: reliability
        annotations:
          summary: "High worker task failure rate"
          description: "Worker task failure rate is {{ $value | humanizePercentage }} for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/worker/high-failure-rate"

      # Worker Service Availability
      - alert: WorkerServiceDown
        expr: up{job="worker"} == 0
        for: 1m
        labels:
          severity: critical
          service: worker
          category: availability
        annotations:
          summary: "Worker service is down"
          description: "Worker service {{ $labels.instance }} is not responding"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/worker/service-down"

      # Worker Task Processing Time
      - alert: SlowWorkerTaskProcessing
        expr: histogram_quantile(0.95, rate(celery_task_runtime_seconds_bucket[5m])) > 300
        for: 5m
        labels:
          severity: medium
          service: worker
          category: performance
        annotations:
          summary: "Slow worker task processing detected"
          description: "95th percentile task processing time is {{ $value | humanizeDuration }} for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/worker/slow-processing"

  # ==============================================================================
  # WEBUI SERVICE MONITORING RULES
  # ==============================================================================

  - name: webui.application.rules
    interval: 60s
    rules:
      # WebUI Service Availability
      - alert: WebUIServiceDown
        expr: up{job="webui"} == 0
        for: 2m
        labels:
          severity: high
          service: webui
          category: availability
        annotations:
          summary: "WebUI service is down"
          description: "WebUI service {{ $labels.instance }} is not responding"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/webui/service-down"

      # WebUI Performance (if instrumented)
      - alert: HighWebUIResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="webui"}[5m])) > 3.0
        for: 3m
        labels:
          severity: medium
          service: webui
          category: performance
        annotations:
          summary: "High WebUI response time"
          description: "95th percentile WebUI response time is {{ $value }}s for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/webui/high-response-time"

  # ==============================================================================
  # APPLICATION HEALTH AND DEPENDENCY RULES
  # ==============================================================================

  - name: application.dependency.rules
    interval: 30s
    rules:
      # Ollama Service Health
      - alert: OllamaServiceDown
        expr: up{job="ollama"} == 0
        for: 2m
        labels:
          severity: high
          service: ollama
          category: dependency
        annotations:
          summary: "Ollama AI service is down"
          description: "Ollama service {{ $labels.instance }} is not responding"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/ollama/service-down"

      # External API Dependencies (synthetic monitoring)
      - alert: ExternalAPIDown
        expr: probe_success{job="blackbox-http"} == 0
        for: 1m
        labels:
          severity: high
          service: external-api
          category: dependency
        annotations:
          summary: "External API endpoint is down"
          description: "External API {{ $labels.instance }} is not responding to health checks"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/external-api/endpoint-down"

      # Reverse Proxy Health
      - alert: CaddyReverseProxyDown
        expr: up{job="caddy"} == 0
        for: 1m
        labels:
          severity: critical
          service: caddy
          category: infrastructure
        annotations:
          summary: "Caddy reverse proxy is down"
          description: "Caddy reverse proxy {{ $labels.instance }} is not responding"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/caddy/service-down"

  # ==============================================================================
  # BUSINESS LOGIC AND USER EXPERIENCE RULES
  # ==============================================================================

  - name: application.business.rules
    interval: 60s
    rules:
      # User Authentication Success Rate
      - alert: LowAuthenticationSuccessRate
        expr: (rate(auth_attempts_total{status="success"}[10m]) / rate(auth_attempts_total[10m])) * 100 < 80
        for: 5m
        labels:
          severity: medium
          service: auth
          category: user-experience
        annotations:
          summary: "Low authentication success rate"
          description: "Authentication success rate is {{ $value | humanizePercentage }} for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/auth/low-success-rate"

      # API Rate Limiting
      - alert: HighRateLimitHitRate
        expr: (rate(api_rate_limit_hits_total[5m]) / rate(http_requests_total{job="fastapi-api"}[5m])) * 100 > 20
        for: 3m
        labels:
          severity: medium
          service: api
          category: user-experience
        annotations:
          summary: "High rate limit hit rate"
          description: "Rate limit hit rate is {{ $value | humanizePercentage }} for {{ $labels.instance }}"
          runbook_url: "https://docs.ai-workflow-engine.local/runbooks/api/high-rate-limit-hits"