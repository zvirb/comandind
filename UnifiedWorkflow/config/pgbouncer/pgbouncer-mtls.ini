[databases]
; Per architectural documents, we define two distinct pools.
; 'app_tx' uses transaction pooling for scalable, stateless services (FastAPI, Celery).
app_tx = host=${POSTGRES_HOST} port=5432 dbname=ai_workflow_db pool_mode=transaction

; 'app_session' uses session pooling for stateful tasks (e.g., long-running Celery jobs).
app_session = host=${POSTGRES_HOST} port=5432 dbname=ai_workflow_db pool_mode=session

[pgbouncer]
; Administrative settings
listen_addr = 0.0.0.0
listen_port = 6432
auth_type = scram-sha-256
# The auth_file path is hardcoded. The entrypoint wrapper script generates this file.
auth_file = /etc/pgbouncer/generated/pgbouncer_users_processed
pidfile = /tmp/pgbouncer.pid
# The healthcheck connects as 'app_user', so it must be an admin user.
# 'pgbouncer' is kept for consistency with documentation on auth_query users.
admin_users = pgbouncer, app_user

; --- Client-Facing mTLS Configuration ---
# mTLS encryption required with mutual authentication for client connections
client_tls_sslmode = require
client_tls_cert_file = /etc/certs/pgbouncer/unified-cert.pem
client_tls_key_file = /etc/certs/pgbouncer/unified-key.pem
client_tls_ca_file = /etc/certs/pgbouncer/rootCA.pem

; --- Server-Facing mTLS Configuration ---
server_tls_sslmode = verify-full
server_tls_ca_file = /etc/certs/pgbouncer/rootCA.pem
server_tls_cert_file = /etc/certs/pgbouncer/unified-cert.pem
server_tls_key_file = /etc/certs/pgbouncer/unified-key.pem

; === OPTIMIZED CONNECTION POOL SETTINGS FOR 200+ CONCURRENT CONNECTIONS ===
; Pool settings are optimized for high-throughput production workloads.
; The pool_mode is defined per-database to support both transaction and session pooling.

; Transaction Pool Configuration (for FastAPI, short-lived operations)
default_pool_size = 30
max_client_conn = 250
reserve_pool_size = 10
reserve_pool_timeout = 5

; Session Pool Configuration  
max_db_connections = 50
pool_mode = transaction

; === CONNECTION TIMEOUT AND LIFECYCLE SETTINGS ===
; Optimized for high-concurrency scenarios with proper cleanup
server_connect_timeout = 15
server_login_retry = 3
query_timeout = 120
query_wait_timeout = 30
client_login_timeout = 60
autodb_idle_timeout = 3600
server_lifetime = 3600
server_idle_timeout = 600
client_idle_timeout = 0

; === CONNECTION HEALTH AND MONITORING ===
; Enable connection health checks and monitoring for production reliability
server_check_delay = 30
server_check_query = SELECT 1
server_fast_close = 1
tcp_keepalive = 1
tcp_keepcnt = 5
tcp_keepidle = 600
tcp_keepintvl = 30

; === PERFORMANCE TUNING ===
; Optimized for high throughput and low latency
listen_backlog = 4096
sbuf_loopcnt = 5
so_reuseport = 1
tcp_defer_accept = 1

; === LOGGING AND DEBUGGING ===
; Production-level logging with performance monitoring
log_connections = 1
log_disconnections = 1
log_pooler_errors = 1
stats_period = 60
verbose = 0

; === CONNECTION HYGIENE ===
; Parameters to ignore for better compatibility
ignore_startup_parameters = extra_float_digits,search_path