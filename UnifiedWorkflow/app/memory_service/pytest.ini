[tool:pytest]
# Pytest configuration for Hybrid Memory Service Test Suite
minversion = 6.0
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test discovery and collection
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-branch
    --cov-fail-under=90
    --durations=10
    --maxfail=5
    -p no:warnings

# Performance testing configuration
timeout = 60
timeout_method = thread

# Markers for test categorization
markers =
    unit: Unit tests for isolated component testing
    integration: Integration tests for API endpoints and database operations
    e2e: End-to-end flow validation tests
    performance: Performance benchmarking tests
    slow: Tests that take longer than 5 seconds
    mock: Tests that use mocked dependencies
    database: Tests that require database connection
    qdrant: Tests that require Qdrant vector database
    ollama: Tests that require Ollama LLM service
    redis: Tests that require Redis cache
    security: Security validation tests
    api: API endpoint tests
    pipeline: Memory pipeline tests
    search: Memory search functionality tests
    
# Test environment configuration
env =
    TESTING = true
    LOG_LEVEL = WARNING
    DATABASE_ECHO = false
    PYTEST_CURRENT_TEST = true
    
# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod