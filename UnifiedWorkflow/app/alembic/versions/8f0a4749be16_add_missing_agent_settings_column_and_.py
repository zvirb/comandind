"""Add missing agent_settings column and fix schema

Revision ID: 8f0a4749be16
Revises: 2996b22d5aa5
Create Date: 2025-07-28 23:13:01.823007

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8f0a4749be16'
down_revision: Union[str, Sequence[str], None] = '2996b22d5aa5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_password_reset_tokens_token'), table_name='password_reset_tokens')
    op.drop_index(op.f('ix_password_reset_tokens_user_id'), table_name='password_reset_tokens')
    op.drop_table('password_reset_tokens')
    op.drop_index(op.f('ix_device_login_attempts_attempted_at'), table_name='device_login_attempts')
    op.drop_index(op.f('ix_device_login_attempts_email'), table_name='device_login_attempts')
    op.drop_index(op.f('ix_passkey_credentials_credential_id'), table_name='passkey_credentials')
    op.alter_column('registered_devices', 'location_info',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_index(op.f('ix_registered_devices_device_fingerprint'), table_name='registered_devices')
    op.drop_index(op.f('idx_system_prompts_prompt_category'), table_name='system_prompts')
    op.drop_index(op.f('idx_system_prompts_prompt_key'), table_name='system_prompts')
    op.drop_index(op.f('idx_system_prompts_user_id'), table_name='system_prompts')
    op.create_index(op.f('ix_system_prompts_prompt_category'), 'system_prompts', ['prompt_category'], unique=False)
    op.create_index(op.f('ix_system_prompts_prompt_key'), 'system_prompts', ['prompt_key'], unique=False)
    op.create_index(op.f('ix_system_prompts_user_id'), 'system_prompts', ['user_id'], unique=False)
    op.alter_column('two_factor_challenges', 'challenge_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False)
    op.drop_index(op.f('ix_two_factor_challenges_session_token'), table_name='two_factor_challenges')
    op.alter_column('user_categories', 'ai_generated',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_index(op.f('idx_user_history_summaries_user_id'), table_name='user_history_summaries')
    op.create_index(op.f('ix_user_history_summaries_user_id'), 'user_history_summaries', ['user_id'], unique=False)
    op.alter_column('user_two_factor_auth', 'totp_backup_codes',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_constraint(op.f('user_two_factor_auth_user_id_key'), 'user_two_factor_auth', type_='unique')
    op.drop_index(op.f('ix_user_two_factor_auth_user_id'), table_name='user_two_factor_auth')
    op.create_index(op.f('ix_user_two_factor_auth_user_id'), 'user_two_factor_auth', ['user_id'], unique=True)
    op.add_column('users', sa.Column('agent_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'agent_settings')
    op.drop_index(op.f('ix_user_two_factor_auth_user_id'), table_name='user_two_factor_auth')
    op.create_index(op.f('ix_user_two_factor_auth_user_id'), 'user_two_factor_auth', ['user_id'], unique=False)
    op.create_unique_constraint(op.f('user_two_factor_auth_user_id_key'), 'user_two_factor_auth', ['user_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('user_two_factor_auth', 'totp_backup_codes',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_index(op.f('ix_user_history_summaries_user_id'), table_name='user_history_summaries')
    op.create_index(op.f('idx_user_history_summaries_user_id'), 'user_history_summaries', ['user_id'], unique=False)
    op.alter_column('user_categories', 'ai_generated',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.create_index(op.f('ix_two_factor_challenges_session_token'), 'two_factor_challenges', ['session_token'], unique=False)
    op.alter_column('two_factor_challenges', 'challenge_data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_index(op.f('ix_system_prompts_user_id'), table_name='system_prompts')
    op.drop_index(op.f('ix_system_prompts_prompt_key'), table_name='system_prompts')
    op.drop_index(op.f('ix_system_prompts_prompt_category'), table_name='system_prompts')
    op.create_index(op.f('idx_system_prompts_user_id'), 'system_prompts', ['user_id'], unique=False)
    op.create_index(op.f('idx_system_prompts_prompt_key'), 'system_prompts', ['prompt_key'], unique=False)
    op.create_index(op.f('idx_system_prompts_prompt_category'), 'system_prompts', ['prompt_category'], unique=False)
    op.create_index(op.f('ix_registered_devices_device_fingerprint'), 'registered_devices', ['device_fingerprint'], unique=False)
    op.alter_column('registered_devices', 'location_info',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.create_index(op.f('ix_passkey_credentials_credential_id'), 'passkey_credentials', ['credential_id'], unique=False)
    op.create_index(op.f('ix_device_login_attempts_email'), 'device_login_attempts', ['email'], unique=False)
    op.create_index(op.f('ix_device_login_attempts_attempted_at'), 'device_login_attempts', ['attempted_at'], unique=False)
    op.create_table('password_reset_tokens',
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('used', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('token', name=op.f('password_reset_tokens_pkey'))
    )
    op.create_index(op.f('ix_password_reset_tokens_user_id'), 'password_reset_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_password_reset_tokens_token'), 'password_reset_tokens', ['token'], unique=False)
    # ### end Alembic commands ###
