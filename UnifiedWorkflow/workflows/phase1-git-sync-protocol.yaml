# Phase 1 Git Synchronization Protocol
# Ensures environment is ready with latest updates before workflow execution

name: "phase1-git-sync-protocol"
version: "1.0"
description: "Automatic git synchronization for workflow environment preparation"

# Phase 1 Integration Requirements
phase_1_integration:
  position: "Pre-agent-ecosystem-validation"
  mandatory: true
  failure_handling: "block_workflow_if_sync_fails"
  
# Git Synchronization Steps
git_sync_steps:
  step_1:
    name: "Check Git Status"
    command: "git status --porcelain"
    purpose: "Verify working directory state"
    success_criteria: "Execute regardless of status"
    
  step_2:
    name: "Stash Local Changes"
    command: "git stash push -m 'Auto-stash before workflow sync'"
    purpose: "Preserve any uncommitted work"
    condition: "if_uncommitted_changes_exist"
    
  step_3:
    name: "Fetch Latest Changes"
    command: "git fetch origin"
    purpose: "Get latest remote repository state"
    timeout: 30000  # 30 seconds
    
  step_4:
    name: "Pull Latest Updates"
    command: "git pull origin master"
    purpose: "Integrate latest workflow improvements"
    conflict_resolution: "favor_remote_for_workflow_files"
    
  step_5:
    name: "Restore Local Changes"
    command: "git stash pop"
    purpose: "Restore previously stashed work"
    condition: "if_stash_exists"
    error_handling: "continue_if_conflicts"

# Integration Points
workflow_integration:
  phase_0_todo_integration:
    - "Query latest orchestration todos from remote"
    - "Merge remote todo updates with local context"
    - "Update .claude/orchestration_todos.json if needed"
    
  phase_1_agent_ecosystem:
    - "Ensure latest agent specifications are available"
    - "Update agent roster from agents/ directory"
    - "Refresh MCP server configurations"
    
  phase_2_strategic_planning:
    - "Access latest strategic intelligence patterns"
    - "Update workflow templates and optimization strategies"
    - "Ensure context package templates are current"

# Configuration Updates
config_refresh:
  unified_orchestration_config:
    file: ".claude/unified-orchestration-config.yaml"
    action: "refresh_from_remote_if_newer"
    
  agent_specifications:
    directory: "agents/"
    action: "sync_all_agent_definitions"
    
  mcp_configurations:
    directory: "mcps/"
    action: "update_server_configurations"
    
  ml_orchestration:
    directory: "ml_orchestration/"
    action: "sync_ml_enhancement_components"

# Conflict Resolution Strategy
conflict_resolution:
  workflow_files:
    strategy: "favor_remote"
    files:
      - "workflows/*.yaml"
      - "templates/*.yaml" 
      - "agents/*.md"
      - "mcps/*/*.json"
      - ".claude/unified-orchestration-config.yaml"
      
  user_context:
    strategy: "favor_local"
    files:
      - ".claude/orchestration_todos.json"
      - ".claude/context_packages/*.json"
      - "local_configurations.*"
      
  ml_components:
    strategy: "favor_remote"
    files:
      - "ml_orchestration/*.py"

# Error Handling
error_handling:
  network_failures:
    action: "continue_with_local_version"
    warning: "Workflow proceeding with potentially outdated components"
    
  merge_conflicts:
    action: "auto_resolve_favor_remote_for_workflow"
    manual_resolution_required:
      - ".claude/orchestration_todos.json"
      - "custom_configurations.*"
      
  authentication_failures:
    action: "continue_with_read_only_access"
    note: "Push capabilities will be disabled"

# Performance Optimization
performance:
  shallow_fetch: true
  fetch_depth: 1
  parallel_operations: true
  cache_credentials: false  # Security best practice
  
# Monitoring and Logging
monitoring:
  log_sync_operations: true
  log_location: ".claude/logs/git_sync_operations.log"
  include_timestamps: true
  include_performance_metrics: true
  
# Integration with Orchestration System
orchestration_hooks:
  pre_phase_1:
    - name: "git_environment_sync"
      agent: "atomic-git-synchronizer"
      priority: "critical"
      context_package: "git_synchronization_context.json"
      
  post_sync_validation:
    - name: "validate_environment_readiness"
      checks:
        - "verify_agent_specifications_loaded"
        - "confirm_mcp_configurations_current"
        - "validate_workflow_templates_available"
        - "check_ml_orchestration_components"

# Success Criteria
success_metrics:
  environment_readiness:
    - "Git repository up to date with remote"
    - "All workflow components synchronized"
    - "No critical merge conflicts"
    - "Agent ecosystem ready for validation"
    
  performance_targets:
    sync_completion_time: "< 30 seconds"
    conflict_resolution_time: "< 5 seconds"
    total_phase_1_preparation: "< 60 seconds"

# Rollback Procedures
rollback:
  trigger_conditions:
    - "Critical merge conflicts unresolvable"
    - "Remote repository corruption detected"
    - "Essential workflow files missing after sync"
    
  rollback_steps:
    - "git reset --hard HEAD@{1}"
    - "Restore from local backup if available"
    - "Continue with previous working version"
    - "Log rollback event for investigation"

# Future Enhancements
future_enhancements:
  - "Intelligent conflict resolution using ML"
  - "Predictive sync based on workflow patterns"
  - "Distributed synchronization for team workflows"
  - "Version validation and compatibility checking"