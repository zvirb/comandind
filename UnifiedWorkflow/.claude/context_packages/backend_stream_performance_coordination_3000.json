{
  "title": "Backend Stream: Performance Coordination Package",
  "target_agents": ["performance-profiler", "backend-gateway-expert"],
  "context_type": "backend_optimization",
  "token_limit": 3000,
  "priority": "critical", 
  "generated": "2025-08-18T21:49:00Z",
  
  "mission_objective": "Optimize backend API response patterns and rate limiting to support frontend WebUI flickering resolution",
  
  "historical_context": {
    "proven_backend_optimizations": [
      "Authentication rate limiting: 100 requests/minute (very permissive to prevent loops)",
      "Session validation circuit breaker patterns",
      "Request deduplication for authentication calls",
      "Atomic token operations preventing race conditions"
    ],
    "previous_success": "Backend authentication optimizations supported frontend infinite loop fix"
  },
  
  "current_backend_analysis": {
    "authentication_services": [
      "/api/v1/auth/status - Authentication validation endpoint",
      "/api/v1/health/integration - Service health integration checks", 
      "/api/v1/auth/refresh - Token refresh operations",
      "/api/v1/session/validate - Session validation calls"
    ],
    "polling_coordination_requirements": [
      "Frontend AuthContext: 30s health checks + 10min auth validation",
      "Service status monitoring: 30s intervals",
      "Performance metrics: 2s collection intervals",
      "Need backend optimization to handle coordinated polling"
    ]
  },
  
  "performance_optimization_strategy": {
    "api_response_timing": [
      "Implement response caching for health check endpoints",
      "Optimize session validation to < 100ms response time",
      "Add ETag headers for conditional requests",
      "Implement connection pooling for authentication services"
    ],
    "rate_limiting_coordination": [
      "Configure burst allowances for legitimate polling intervals",
      "Implement sliding window rate limiting for smooth traffic",
      "Add request prioritization for critical authentication calls",
      "Monitor for 429 errors and adjust limits dynamically"
    ]
  },
  
  "circuit_breaker_backend_support": {
    "health_endpoint_optimization": [
      "Cache service health status for 30s to support frontend polling",
      "Implement graceful degradation responses",
      "Add circuit breaker status in health response",
      "Provide service availability predictions"
    ],
    "authentication_resilience": [
      "Implement retry-after headers for failed auth requests",
      "Add exponential backoff recommendations in responses",
      "Provide circuit breaker coordination signals",
      "Support frontend operation lock patterns"
    ]
  },
  
  "api_communication_optimization": {
    "polling_efficiency": [
      "Implement long-polling for real-time updates where appropriate",
      "Add Last-Modified headers for conditional requests",
      "Support batch operations for multiple status checks",
      "Optimize database queries for frequent polling endpoints"
    ],
    "response_coordination": [
      "Add timing metadata to API responses",
      "Implement request correlation IDs for debugging",
      "Provide backend status indicators for frontend coordination",
      "Support frontend circuit breaker decision making"
    ]
  },
  
  "monitoring_and_metrics": {
    "performance_tracking": [
      "Monitor API response times for all authentication endpoints",
      "Track rate limiting effectiveness and 429 error rates",
      "Measure backend service coordination efficiency", 
      "Monitor database query performance for polling endpoints"
    ],
    "integration_metrics": [
      "Frontend-backend communication latency",
      "Authentication flow success rates",
      "Circuit breaker coordination effectiveness",
      "Resource utilization during polling peaks"
    ]
  },
  
  "database_optimization": {
    "session_management": [
      "Optimize session lookup queries for frequent validation",
      "Implement connection pooling for auth database operations",
      "Add database-level circuit breakers for resilience",
      "Cache authentication status for short intervals"
    ],
    "performance_tuning": [
      "Index optimization for authentication queries",
      "Query batching for health check operations",
      "Connection pool sizing for polling load",
      "Database monitoring for polling impact"
    ]
  },
  
  "coordination_with_streams": {
    "frontend_support": [
      "Provide API response timing metadata for frontend optimization",
      "Support frontend circuit breaker patterns with backend signals",
      "Coordinate polling intervals through response headers",
      "Enable frontend request prioritization through backend hints"
    ],
    "quality_validation": [
      "Provide performance metrics for quality stream validation",
      "Support user experience testing with optimized response times",
      "Enable comprehensive monitoring for validation evidence",
      "Coordinate with quality stream for end-to-end testing"
    ]
  },
  
  "implementation_priorities": [
    "Optimize authentication endpoint response times",
    "Implement caching for frequently polled endpoints",
    "Add circuit breaker coordination headers",
    "Monitor and adjust rate limiting for polling patterns"
  ],
  
  "success_metrics": [
    "Authentication API response time < 100ms",
    "Zero 429 rate limiting errors during normal polling",
    "Backend service coordination efficiency > 95%",
    "Database query performance optimized for polling load"
  ],
  
  "rollback_conditions": [
    "API response time regression > 50ms",
    "Authentication success rate drops below baseline",
    "Database performance degradation",
    "Circuit breaker coordination failures"
  ]
}