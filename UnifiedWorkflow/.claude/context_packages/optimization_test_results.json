[
  {
    "scenario": {
      "agent": "backend-gateway-expert",
      "domain": "backend",
      "target_tokens": 3200,
      "task_requirements": [
        "Implement FastAPI microservices architecture",
        "Add JWT authentication system",
        "Optimize database connections",
        "Implement caching strategy"
      ]
    },
    "allocation_result": {
      "allocated_tokens": 3519,
      "complexity_score": 1.49,
      "strategy": "intelligent_summarization_with_technical_depth",
      "efficiency": 1.0
    },
    "package_generation": {
      "content_tokens": 27.3,
      "final_tokens": 27.3,
      "compression_applied": false
    },
    "coordination_metadata": {
      "coordination_id": "c31685f0c57618c2",
      "dependencies_count": 4,
      "validation_criteria_count": 2
    },
    "performance_metrics": {
      "token_efficiency": 0.00853125,
      "generation_time": 0.0016791820526123047,
      "readiness_score": 1.0
    }
  },
  {
    "scenario": {
      "agent": "security-validator",
      "domain": "security",
      "target_tokens": 2500,
      "task_requirements": [
        "Validate authentication security",
        "Scan for SQL injection vulnerabilities",
        "Implement rate limiting",
        "Ensure HTTPS enforcement"
      ]
    },
    "allocation_result": {
      "allocated_tokens": 3212,
      "complexity_score": 1.49,
      "strategy": "balanced_compression_optimization",
      "efficiency": 1.0
    },
    "package_generation": {
      "content_tokens": 2.6,
      "final_tokens": 2.6,
      "compression_applied": false
    },
    "coordination_metadata": {
      "coordination_id": "3b66a9097ece9ab2",
      "dependencies_count": 4,
      "validation_criteria_count": 1
    },
    "performance_metrics": {
      "token_efficiency": 0.0010400000000000001,
      "generation_time": 0.0006046295166015625,
      "readiness_score": 1.0
    }
  },
  {
    "scenario": {
      "agent": "performance-profiler",
      "domain": "performance",
      "target_tokens": 2800,
      "task_requirements": [
        "Analyze response time bottlenecks",
        "Optimize caching strategies",
        "Monitor resource utilization",
        "Implement performance benchmarks"
      ]
    },
    "allocation_result": {
      "allocated_tokens": 3189,
      "complexity_score": 1.49,
      "strategy": "metrics_focused_compression",
      "efficiency": 0.8490000000000001
    },
    "package_generation": {
      "content_tokens": 2.6,
      "final_tokens": 2.6,
      "compression_applied": false
    },
    "coordination_metadata": {
      "coordination_id": "704c317e630e3647",
      "dependencies_count": 4,
      "validation_criteria_count": 1
    },
    "performance_metrics": {
      "token_efficiency": 0.0009285714285714286,
      "generation_time": 0.0005624294281005859,
      "readiness_score": 1.0
    }
  },
  {
    "scenario": {
      "agent": "k8s-architecture-specialist",
      "domain": "infrastructure",
      "target_tokens": 3000,
      "task_requirements": [
        "Design Kubernetes deployment manifests",
        "Configure auto-scaling policies",
        "Implement health checks",
        "Set up monitoring and alerting"
      ]
    },
    "allocation_result": {
      "allocated_tokens": 3368,
      "complexity_score": 1.29,
      "strategy": "balanced_compression_optimization",
      "efficiency": 1.0
    },
    "package_generation": {
      "content_tokens": 2.6,
      "final_tokens": 2.6,
      "compression_applied": false
    },
    "coordination_metadata": {
      "coordination_id": "1c19e8db46517942",
      "dependencies_count": 4,
      "validation_criteria_count": 1
    },
    "performance_metrics": {
      "token_efficiency": 0.0008666666666666667,
      "generation_time": 0.0005867481231689453,
      "readiness_score": 1.0
    }
  }
]