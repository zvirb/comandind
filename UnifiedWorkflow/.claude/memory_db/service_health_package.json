{
  "package_id": "service_health_package",
  "package_type": "migrated-context",
  "content": "{\n  \"package_id\": \"service_health_monitoring\",\n  \"priority\": \"HIGH\",\n  \"token_count\": 2500,\n  \"coordination_metadata\": {\n    \"phase\": 5,\n    \"stream\": 2,\n    \"dependencies\": [\"infrastructure_fix_qdrant_tls\"],\n    \"estimated_duration\": \"20 minutes\",\n    \"risk_level\": \"LOW\"\n  },\n  \"health_monitoring_framework\": {\n    \"objective\": \"Implement comprehensive health monitoring for all cognitive services\",\n    \"current_status\": {\n      \"healthy_services\": [\"monitoring_service\", \"memory_service\"],\n      \"unhealthy_services\": [\"learning_service\", \"worker_service\", \"reasoning_service\"],\n      \"missing_health_endpoints\": [\"calendar_service\", \"documents_service\", \"chat_service\"]\n    }\n  },\n  \"health_endpoint_implementation\": {\n    \"standard_pattern\": {\n      \"endpoint\": \"/health\",\n      \"response_format\": {\n        \"status\": \"healthy|unhealthy\",\n        \"service\": \"service_name\",\n        \"version\": \"1.0.0\",\n        \"dependencies\": {\n          \"qdrant\": \"connected|disconnected\",\n          \"redis\": \"connected|disconnected\",\n          \"database\": \"connected|disconnected\"\n        },\n        \"timestamp\": \"ISO-8601\"\n      }\n    },\n    \"implementation_template\": \"async def health_check():\\n    try:\\n        # Check Qdrant connection\\n        qdrant_status = await check_qdrant_connection()\\n        # Check other dependencies\\n        redis_status = await check_redis_connection()\\n        \\n        return JSONResponse({\\n            'status': 'healthy' if all([qdrant_status, redis_status]) else 'unhealthy',\\n            'service': 'service_name',\\n            'dependencies': {\\n                'qdrant': 'connected' if qdrant_status else 'disconnected',\\n                'redis': 'connected' if redis_status else 'disconnected'\\n            }\\n        })\\n    except Exception as e:\\n        return JSONResponse({'status': 'unhealthy', 'error': str(e)}, status_code=503)\"\n  },\n  \"monitoring_dashboard\": {\n    \"endpoint\": \"http://localhost:8008/health-dashboard\",\n    \"aggregated_view\": \"All service health statuses in single view\",\n    \"refresh_interval\": \"30 seconds\",\n    \"alert_thresholds\": {\n      \"critical\": \"Any service unhealthy for > 5 minutes\",\n      \"warning\": \"Any service unhealthy for > 2 minutes\"\n    }\n  },\n  \"validation_commands\": [\n    \"curl http://localhost:8001/health  # API Gateway\",\n    \"curl http://localhost:8002/health  # WebUI\",\n    \"curl http://localhost:8003/health  # Learning Service\",\n    \"curl http://localhost:8004/health  # Worker Service\",\n    \"curl http://localhost:8005/health  # Memory Service\",\n    \"curl http://localhost:8006/health  # Reasoning Service\",\n    \"curl http://localhost:8008/health  # Monitoring Service\"\n  ],\n  \"evidence_collection\": {\n    \"required_screenshots\": [\n      \"Health dashboard showing all services green\",\n      \"Individual health endpoint responses\",\n      \"Docker container status (docker ps output)\",\n      \"Service logs showing successful connections\"\n    ],\n    \"automated_testing\": \"while true; do for port in 8001 8002 8003 8004 8005 8006 8008; do echo \\\"Testing :$port\\\"; curl -s http://localhost:$port/health | jq '.status'; done; sleep 5; done\"\n  }\n}",
  "tokens": 340,
  "created_at": "2025-08-18T15:14:25.736599",
  "last_accessed": "2025-08-18T15:14:25.736612",
  "priority": "medium",
  "context_tags": [
    "migrated",
    "context-package"
  ]
}