#!/bin/bash

# Setup GitHub Repository Secrets for Claude AI Integration
# This script helps you configure the necessary secrets for Claude AI GitHub Actions

set -e

echo "ü§ñ Setting up GitHub Repository Secrets for Claude AI Integration"
echo "=================================================================="

# Check if gh CLI is authenticated
if ! gh auth status >/dev/null 2>&1; then
    echo "‚ùå GitHub CLI is not authenticated. Please run 'gh auth login' first."
    exit 1
fi

echo "‚úÖ GitHub CLI is authenticated"

# Get repository information
REPO=$(gh repo view --json nameWithOwner --jq .nameWithOwner)
echo "üìÅ Repository: $REPO"

# Function to set a secret
set_secret() {
    local secret_name=$1
    local secret_description=$2
    local secret_value=$3
    
    if [ -n "$secret_value" ]; then
        echo "$secret_value" | gh secret set "$secret_name" --body -
        echo "‚úÖ Set secret: $secret_name"
    else
        echo "‚ö†Ô∏è  Skipping $secret_name (no value provided)"
    fi
}

# Function to prompt for secret
prompt_secret() {
    local secret_name=$1
    local secret_description=$2
    local is_required=$3
    
    echo ""
    echo "üîë $secret_name"
    echo "   Description: $secret_description"
    
    if [ "$is_required" = "true" ]; then
        echo "   Status: REQUIRED"
    else
        echo "   Status: Optional"
    fi
    
    read -s -p "   Enter value (or press Enter to skip): " secret_value
    echo ""
    
    if [ -n "$secret_value" ]; then
        set_secret "$secret_name" "$secret_description" "$secret_value"
        return 0
    elif [ "$is_required" = "true" ]; then
        echo "‚ùå $secret_name is required for Claude AI integration to work"
        return 1
    else
        echo "‚è≠Ô∏è  Skipped $secret_name"
        return 0
    fi
}

echo ""
echo "üìã Required Secrets Setup"
echo "========================="

# Required secrets
prompt_secret "ANTHROPIC_API_KEY" "Your Anthropic API key for Claude AI access" "true"

echo ""
echo "üìã Optional Secrets Setup"
echo "========================="

# Optional secrets
prompt_secret "CLAUDE_PROJECT_ID" "Claude project ID for organized conversations" "false"
prompt_secret "SLACK_WEBHOOK_URL" "Slack webhook for notifications" "false"
prompt_secret "DISCORD_WEBHOOK_URL" "Discord webhook for notifications" "false"

echo ""
echo "üîß Setting up additional repository configuration..."

# Set up repository labels for Claude AI
echo "üè∑Ô∏è  Creating labels for Claude AI integration..."

gh label create "claude-request" --description "Issue to be processed by Claude AI" --color "0E7DB8" --force
gh label create "claude-generated" --description "PR generated by Claude AI" --color "7057FF" --force
gh label create "claude-reviewed" --description "PR reviewed by Claude AI" --color "00D2B8" --force
gh label create "automated" --description "Automated process" --color "B60205" --force

echo "‚úÖ Labels created successfully"

# Enable GitHub Actions
echo "‚öôÔ∏è  Ensuring GitHub Actions are enabled..."
gh api repos/$REPO/actions/permissions --method PUT --field enabled=true --field allowed_actions=all

echo "‚úÖ GitHub Actions enabled"

# Create a test issue to verify integration
echo ""
echo "üß™ Creating a test issue to verify Claude AI integration..."

gh issue create \
    --title "[CLAUDE] Test Claude AI Integration" \
    --body "## Test Issue

This is a test issue to verify that Claude AI integration is working correctly.

## Requirements
- Verify GitHub Actions can trigger on issue creation
- Confirm Claude CLI can authenticate
- Test automatic branch creation and PR generation

## Acceptance Criteria
- [ ] GitHub Action triggers successfully
- [ ] Claude AI processes the issue
- [ ] Automated PR is created
- [ ] PR contains meaningful implementation

## Additional Context
This is an automated test for the Claude AI GitHub integration setup.

Priority: Medium
Complexity: Simple (< 1 day)" \
    --label "claude-request,enhancement" || echo "‚ö†Ô∏è  Could not create test issue (this is normal if the repo is empty)"

echo ""
echo "‚úÖ GitHub Integration Setup Complete!"
echo "===================================="
echo ""
echo "üìù Next Steps:"
echo "1. Check your repository secrets at: https://github.com/$REPO/settings/secrets/actions"
echo "2. Monitor the GitHub Actions tab for the test workflow"
echo "3. Review the test issue and generated PR"
echo ""
echo "üîß Usage:"
echo "- Create issues with [CLAUDE] prefix for automatic processing"
echo "- Use the issue templates for guided feature requests and bug reports"
echo "- PRs will automatically get Claude AI code reviews"
echo "- Push commits to trigger codebase analysis"
echo ""
echo "üìö Documentation:"
echo "- GitHub Actions: .github/workflows/claude-integration.yml"
echo "- Issue templates: .github/ISSUE_TEMPLATE/"
echo "- Project standards: CLAUDE.md"
echo ""
echo "üéâ Claude AI is now integrated with your GitHub repository!"