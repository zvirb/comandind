# docker-compose.blue.yml
# Blue Environment Configuration for AI Workflow Engine
# This file extends the base docker-compose.yml with blue-specific configurations

include:
  - docker-compose.yml

# Override service configurations for Blue environment
services:
  postgres:
    container_name: ai_workflow_engine_blue_postgres
    environment:
      - ENVIRONMENT=blue
    ports:
      - "5432:5432"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  redis:
    container_name: ai_workflow_engine_blue_redis
    environment:
      - ENVIRONMENT=blue
    ports:
      - "6379:6379"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  qdrant:
    container_name: ai_workflow_engine_blue_qdrant
    environment:
      - ENVIRONMENT=blue
    ports:
      - "6333:6333"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  api:
    container_name: ai_workflow_engine_blue_api
    environment:
      - ENVIRONMENT=blue
    ports:
      - "8000:8000"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
        
  worker:
    container_name: ai_workflow_engine_blue_worker
    environment:
      - ENVIRONMENT=blue
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
        
  webui:
    container_name: ai_workflow_engine_blue_webui
    environment:
      - ENVIRONMENT=blue
      - API_BASE_URL=http://api:8000
    ports:
      - "3000:3000"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
    depends_on:
      api:
        condition: service_healthy
        
  caddy_reverse_proxy:
    container_name: ai_workflow_engine_blue_caddy
    environment:
      - ENVIRONMENT=blue
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
    depends_on:
      api:
        condition: service_healthy
      webui:
        condition: service_started
        
  # Monitoring services with blue environment configuration
  prometheus:
    container_name: ai_workflow_engine_blue_prometheus
    environment:
      - ENVIRONMENT=blue
    ports:
      - "9090:9090"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  grafana:
    container_name: ai_workflow_engine_blue_grafana
    environment:
      - ENVIRONMENT=blue
      - GF_SERVER_ROOT_URL=http://localhost:3001
    ports:
      - "3001:3000"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  alertmanager:
    container_name: ai_workflow_engine_blue_alertmanager
    environment:
      - ENVIRONMENT=blue
    ports:
      - "9093:9093"
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  # Exporters with blue environment labels
  redis_exporter:
    container_name: ai_workflow_engine_blue_redis_exporter
    environment:
      - ENVIRONMENT=blue
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  postgres_exporter:
    container_name: ai_workflow_engine_blue_postgres_exporter
    environment:
      - ENVIRONMENT=blue
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  pgbouncer_exporter:
    container_name: ai_workflow_engine_blue_pgbouncer_exporter
    environment:
      - ENVIRONMENT=blue
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
      
  # Additional monitoring
  cadvisor:
    container_name: ai_workflow_engine_blue_cadvisor
    environment:
      - ENVIRONMENT=blue
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"

# Blue-specific networks
networks:
  default:
    name: ai_workflow_engine_blue_net
    driver: bridge
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"

# Blue-specific volumes (isolated from green environment)
volumes:
  postgres_data:
    name: ai_workflow_engine_blue_postgres_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  redis_data:
    name: ai_workflow_engine_blue_redis_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  qdrant_data:
    name: ai_workflow_engine_blue_qdrant_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  prometheus_data:
    name: ai_workflow_engine_blue_prometheus_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  grafana_data:
    name: ai_workflow_engine_blue_grafana_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  alertmanager_data:
    name: ai_workflow_engine_blue_alertmanager_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  ollama_data:
    name: ai_workflow_engine_blue_ollama_data
    labels:
      - "environment=blue"
      - "deployment.type=blue-green"
  # Shared volumes (certificates can be shared between environments)
  certs:
    name: ai_workflow_engine_shared_certs
    labels:
      - "shared=true"
      - "deployment.type=blue-green"