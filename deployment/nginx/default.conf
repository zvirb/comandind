# Production server configuration for Command & Independent Thought game

server {
    listen 8080;
    server_name _;
    
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip for this server block
    gzip_static on;

    # Security and performance headers specific to game content
    add_header Cache-Control "public, no-transform" always;
    add_header X-Game-Version "0.1.0" always;
    add_header X-Deployment-Type "blue-green" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header X-Health-Check "nginx" always;
    }

    # Detailed health check with application status
    location /health/detailed {
        try_files $uri /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header X-Health-Check "application" always;
    }

    # Readiness probe for Kubernetes/container orchestration
    location /ready {
        access_log off;
        return 200 "ready\n";
        add_header Content-Type text/plain;
    }

    # Liveness probe
    location /live {
        access_log off; 
        return 200 "alive\n";
        add_header Content-Type text/plain;
    }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache "STATIC";
        
        # Apply rate limiting to prevent asset abuse
        limit_req zone=static burst=50 nodelay;
        
        # Enable efficient file serving
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
    }

    # Game assets with moderate caching
    location /assets/ {
        expires 30d;
        add_header Cache-Control "public";
        add_header X-Cache "ASSETS";
        
        # Optimize for large game files
        sendfile on;
        tcp_nopush on;
        
        # Handle CORS for game assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
    }

    # API endpoints (if needed for multiplayer)
    location /api/ {
        # Apply API rate limiting
        limit_req zone=api burst=20 nodelay;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-API-Version "1.0";
        
        # Proxy to backend service when available
        # proxy_pass http://game-api:3001;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # For now, return to main app
        try_files $uri /index.html;
    }

    # WebSocket support for real-time features
    location /ws {
        # proxy_pass http://game-websocket:3002;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # For now, return error
        return 503 "WebSocket service temporarily unavailable";
    }

    # Main application - SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # No caching for HTML to ensure updates are reflected
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Security: limit request size for DDoS protection
    client_max_body_size 10m;
    client_body_buffer_size 1m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
}