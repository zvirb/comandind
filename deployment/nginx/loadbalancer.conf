# Load Balancer Configuration for Blue-Green Deployment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr=$upstream_addr '
                    'upstream_status=$upstream_status '
                    'upstream_response_time=$upstream_response_time '
                    'request_time=$request_time';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Upstream definitions for blue-green deployment
    upstream game-backend {
        # Health checks with backup
        server game-blue:8080 max_fails=3 fail_timeout=30s;
        server game-green:8080 backup max_fails=3 fail_timeout=30s;
        
        # Load balancing method
        least_conn;
        keepalive 32;
    }

    # Active upstream (can be switched for deployment)
    upstream game-active {
        server game-blue:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Standby upstream (for testing new version)
    upstream game-standby {
        server game-green:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Load-Balancer "nginx-blue-green" always;

        # Health check endpoint for load balancer itself
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Blue-green deployment control endpoints
        location /deployment/status {
            access_log off;
            return 200 "active: blue, standby: green\n";
            add_header Content-Type text/plain;
        }

        # Switch traffic to green (for deployment)
        location /deployment/switch {
            access_log off;
            return 200 "Switch deployment using external script\n";
            add_header Content-Type text/plain;
        }

        # Test endpoint - always routes to standby for testing
        location /test/ {
            proxy_pass http://game-standby;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Deployment-Test "true";
            
            # Shorter timeouts for testing
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Main application traffic
        location / {
            # Apply rate limiting
            limit_req zone=general burst=20 nodelay;

            # Proxy to active backend
            proxy_pass http://game-active;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Deployment-Slot "active";

            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;

            # Health check integration
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # API traffic with stricter rate limiting
        location /api/ {
            limit_req zone=api burst=10 nodelay;

            proxy_pass http://game-active;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # API-specific headers
            add_header X-API-Load-Balancer "true" always;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://game-active;
            proxy_cache_valid 200 1h;
            proxy_set_header Host $host;
            
            # Cache headers
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Error handling
        error_page 502 503 504 @fallback;
        
        location @fallback {
            # Fallback to standby if active fails
            proxy_pass http://game-standby;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Deployment-Fallback "true";
        }
    }

    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}