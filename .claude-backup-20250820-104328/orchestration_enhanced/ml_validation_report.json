{
  "timestamp": 1755485190.821621,
  "total_tests": 7,
  "passed_tests": 5,
  "success_rate": 71.42857142857143,
  "test_results": [
    {
      "test": "Agent Selection Decision Structure",
      "passed": true,
      "details": "Generated 4 scored agent options",
      "timestamp": 1755485190.8173013
    },
    {
      "test": "Agent Selection Scoring Logic",
      "passed": true,
      "details": "Backend agent score (0.413) > Frontend agent score (0.330)",
      "timestamp": 1755485190.8173141
    },
    {
      "test": "Confidence Scoring System",
      "passed": true,
      "details": "Generated 4 confidence scores, all in [0,1] range",
      "timestamp": 1755485190.8173196
    },
    {
      "test": "Parallel Coordination Decision Engine",
      "passed": false,
      "details": "Exception occurred: string indices must be integers, not 'str'",
      "timestamp": 1755485190.8173428
    },
    {
      "test": "Validation Strategy - Low Criticality",
      "passed": true,
      "details": "Generated 1 validation levels for low criticality",
      "timestamp": 1755485190.8173852
    },
    {
      "test": "Validation Strategy - High Criticality",
      "passed": true,
      "details": "Generated 3 validation levels for critical criticality",
      "timestamp": 1755485190.8174174
    },
    {
      "test": "Risk Assessment Calculation",
      "passed": true,
      "details": "Risk score: 0.400",
      "timestamp": 1755485190.817438
    },
    {
      "test": "Risk Mitigation Recommendations",
      "passed": true,
      "details": "Mitigation strategy: Proceed with medium risk mitigation...",
      "timestamp": 1755485190.8174405
    },
    {
      "test": "Container Conflict Detection",
      "passed": true,
      "details": "Detected 1 potential conflicts",
      "timestamp": 1755485190.81746
    },
    {
      "test": "Conflict Resolution Strategy",
      "passed": true,
      "details": "Resolution: Execute 0 safe operations, resolve 0 conflicts...",
      "timestamp": 1755485190.8174622
    },
    {
      "test": "Stream Prioritization Logic",
      "passed": false,
      "details": "Prioritized 0 execution streams",
      "timestamp": 1755485190.8189855
    },
    {
      "test": "ML Orchestrator Initialization",
      "passed": false,
      "details": "ML engine and workflow phases properly initialized",
      "timestamp": 1755485190.8215332
    },
    {
      "test": "ML Decision Integration",
      "passed": true,
      "details": "ML decision engine properly integrated into orchestrator",
      "timestamp": 1755485190.821538
    }
  ],
  "evidence": [
    {
      "test": "agent_selection",
      "timestamp": 1755485190.8173268,
      "evidence": {
        "decision_type": "agent_selection",
        "num_options": 4,
        "top_agent": "backend-gateway-expert",
        "top_score": 0.41333333333333333,
        "confidence_range": "[0.330, 0.413]",
        "recommended_action": "Use agents: ['backend-gateway-expert', 'webui-architect', 'security-validator']",
        "reasoning": "Selected based on task compatibility (backend_implementation) and performance history"
      }
    },
    {
      "test": "validation_strategy_low criticality",
      "timestamp": 1755485190.8173904,
      "evidence": {
        "criticality": "low",
        "validation_levels": 1,
        "coverage_levels": [
          "primary_functionality"
        ],
        "confidence_scores": [
          0.9
        ]
      }
    },
    {
      "test": "validation_strategy_high criticality",
      "timestamp": 1755485190.8174217,
      "evidence": {
        "criticality": "critical",
        "validation_levels": 3,
        "coverage_levels": [
          "primary_functionality",
          "affected_services",
          "full_system"
        ],
        "confidence_scores": [
          0.9,
          0.8,
          0.95
        ]
      }
    },
    {
      "test": "risk_assessment",
      "timestamp": 1755485190.8174427,
      "evidence": {
        "risk_score": 0.4,
        "mitigation_strategy": "Proceed with medium risk mitigation",
        "reasoning": "Risk assessment based on operation type, system health, and failure patterns"
      }
    },
    {
      "test": "container_conflict",
      "timestamp": 1755485190.817465,
      "evidence": {
        "conflicts_detected": 1,
        "conflict_types": [
          null
        ],
        "resolution_strategy": "Execute 0 safe operations, resolve 0 conflicts"
      }
    },
    {
      "test": "stream_prioritization",
      "timestamp": 1755485190.818991,
      "evidence": {
        "num_streams": 0,
        "priority_scores": [],
        "execution_order": [],
        "prioritization_reasoning": "Prioritization based on dependencies, resource constraints, and impact"
      }
    },
    {
      "test": "orchestrator_integration",
      "timestamp": 1755485190.8215406,
      "evidence": {
        "ml_engine_present": true,
        "workflow_phases_present": false,
        "integration_successful": true
      }
    }
  ]
}