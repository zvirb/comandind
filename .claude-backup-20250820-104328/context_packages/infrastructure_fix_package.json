{
  "package_id": "infrastructure_fix_qdrant_tls",
  "priority": "CRITICAL",
  "token_count": 2800,
  "coordination_metadata": {
    "phase": 5,
    "stream": 1,
    "dependencies": [],
    "estimated_duration": "15 minutes",
    "risk_level": "LOW"
  },
  "implementation_context": {
    "problem_statement": "3 services failing due to SSL certificate verification errors when connecting to Qdrant vector database",
    "root_cause": "Services attempting SSL verification against self-signed certificates in Docker network",
    "solution_pattern": "Disable SSL verification in Qdrant client initialization (secure within Docker network)"
  },
  "specific_fixes": [
    {
      "service": "learning_service",
      "file": "app/learning_service/services/qdrant_service.py",
      "line": 31,
      "current_code": "self.client = QdrantClient(url=qdrant_url)",
      "fixed_code": "self.client = QdrantClient(url=qdrant_url, verify=False)",
      "validation": "Service health endpoint returns 200 after restart"
    },
    {
      "service": "worker_service",
      "file": "app/worker_service/services/qdrant_service.py",
      "line": 18,
      "current_code": "self.client = QdrantClient(url=qdrant_url)",
      "fixed_code": "self.client = QdrantClient(url=qdrant_url, verify=False)",
      "validation": "Service processes test task successfully"
    }
  ],
  "working_example": {
    "service": "memory_service",
    "file": "app/memory_service/services/qdrant_service.py",
    "implementation": "self.client = QdrantClient(url=qdrant_url, verify=False, api_key=api_key)",
    "status": "HEALTHY - This pattern works correctly"
  },
  "implementation_steps": [
    "1. Edit learning_service qdrant_service.py to add verify=False",
    "2. Edit worker_service qdrant_service.py to add verify=False",
    "3. Restart affected services: docker-compose restart learning_service worker_service",
    "4. Validate health endpoints return 200 status",
    "5. Test basic functionality for each service"
  ],
  "evidence_requirements": [
    "Screenshot of health endpoint returning 200 for learning_service",
    "Screenshot of health endpoint returning 200 for worker_service",
    "Docker logs showing successful Qdrant connections",
    "Test API calls demonstrating restored functionality"
  ]
}