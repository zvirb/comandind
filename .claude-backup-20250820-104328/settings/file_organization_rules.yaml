# Claude File Organization Rules
# Enforces standardized file placement and naming conventions

version: "1.0"
last_updated: "2025-08-16"
enforced: true

# File Creation Rules by Pattern
file_creation_rules:
  # Validation and Testing
  validation_reports:
    patterns:
      - "*_VALIDATION_*.md"
      - "*_validation_report*.{md,json}"
      - "validation_evidence_*.{md,json}"
    directory: "reports/validation/"
    naming_convention: "{date}_{component}_validation_{type}.{ext}"
  
  test_scripts:
    patterns:
      - "test_*.py"
      - "*_test.py"
      - "validate_*.py"
    directory: "tests/validation/"
    naming_convention: "test_{component}_{function}.py"
  
  # Performance and Analysis
  performance_analysis:
    patterns:
      - "*_performance_*.{py,json}"
      - "perf_*.{py,json}"
      - "benchmark_*.{py,json}"
    directory: "reports/performance/"
    naming_convention: "{date}_performance_{component}_{metric}.{ext}"
  
  # Security and Audits
  security_reports:
    patterns:
      - "*_security_*.{md,json}"
      - "*_audit_*.{md,json}"
      - "vulnerability_*.{md,json}"
    directory: "reports/security/"
    naming_convention: "{date}_security_{type}_{scope}.{ext}"
  
  # Orchestration Outputs
  orchestration_outputs:
    patterns:
      - "*_orchestration_*.{md,json}"
      - "phase*_*.{md,json}"
      - "iteration*_*.{md,json}"
    directory: ".claude/orchestration/outputs/"
    naming_convention: "{date}_phase{phase}_{operation}_{status}.{ext}"
  
  # Context Packages
  context_packages:
    patterns:
      - "*_context_package.json"
      - "*_context.json"
      - "*_package.json"
    directory: ".claude/context_packages/"
    naming_convention: "{agent}_{domain}_context_package.json"
  
  # Temporary and Experimental
  temporary_scripts:
    patterns:
      - "tmp_*.{py,sh}"
      - "temp_*.{py,sh}"
      - "debug_*.{py,sh}"
    directory: "tmp/workspace/"
    naming_convention: "tmp_{purpose}_{timestamp}.{ext}"
    auto_cleanup_days: 7
  
  experimental_code:
    patterns:
      - "exp_*.{py,sh}"
      - "experiment_*.{py,sh}"
      - "poc_*.{py,sh}"
    directory: "archive/experiments/"
    naming_convention: "exp_{date}_{feature}_{version}.{ext}"
  
  # Deployment and Configuration
  deployment_configs:
    patterns:
      - "deploy_*.{yaml,yml}"
      - "*_deployment.{yaml,yml}"
      - "k8s_*.{yaml,yml}"
    directory: "config/k8s/"
    naming_convention: "{environment}_{service}_deployment.yaml"
  
  docker_configs:
    patterns:
      - "docker-compose*.{yaml,yml}"
      - "Dockerfile*"
      - "*_docker.{yaml,yml}"
    directory: "config/docker/"
    naming_convention: "{service}_docker.{ext}"
  
  # Scripts and Automation
  maintenance_scripts:
    patterns:
      - "cleanup_*.{py,sh}"
      - "maintain_*.{py,sh}"
      - "fix_*.{py,sh}"
    directory: "scripts/maintenance/"
    naming_convention: "{action}_{target}_{date}.{ext}"
  
  monitoring_scripts:
    patterns:
      - "monitor_*.{py,sh}"
      - "check_*.{py,sh}"
      - "health_*.{py,sh}"
    directory: "scripts/monitoring/"
    naming_convention: "monitor_{service}_{metric}.{ext}"

# Agent-Specific Output Directories
agent_output_preferences:
  project-janitor:
    reports: "reports/orchestration/cleanup/"
    logs: "logs/maintenance/"
    artifacts: ".claude/orchestration/janitor/"
  
  codebase-research-analyst:
    analysis: ".claude/context_packages/research/"
    reports: "reports/orchestration/research/"
    cache: "tmp/cache/research/"
  
  documentation-specialist:
    generated: "docs/generated/"
    updates: "docs/"
    templates: "docs/templates/"
  
  test-automation-engineer:
    tests: "tests/automated/"
    reports: "reports/validation/"
    fixtures: "tests/fixtures/"
  
  security-validator:
    reports: "reports/security/"
    scans: "reports/security/scans/"
    policies: "config/security/"
  
  performance-profiler:
    reports: "reports/performance/"
    benchmarks: "reports/performance/benchmarks/"
    profiles: "reports/performance/profiles/"
  
  deployment-orchestrator:
    configs: "config/deployments/"
    artifacts: "artifacts/deployments/"
    logs: "logs/deployments/"
  
  backend-gateway-expert:
    apis: "app/api/"
    services: "app/services/"
    configs: "config/services/"
  
  webui-architect:
    components: "app/webui/components/"
    styles: "app/webui/styles/"
    assets: "app/webui/assets/"

# Forbidden Locations (files should NOT be created here)
forbidden_locations:
  - path: "/"  # Root directory
    exceptions:
      - "README.md"
      - "LICENSE"
      - ".gitignore"
      - "requirements.txt"
      - "pyproject.toml"
      - "docker-compose.yml"
      - "CLAUDE.md"
      - ".env"
    enforce_strictly: true
  
  - path: "/app/"  # App root
    exceptions:
      - "__init__.py"
      - "main.py"
    enforce_strictly: false

# Automatic Cleanup Rules
cleanup_rules:
  backup_files:
    patterns:
      - "*.bak"
      - "*.backup"
      - "*~"
      - "*.old"
    action: "archive"
    destination: "archive/backup/"
    retention_days: 30
  
  temporary_files:
    patterns:
      - "tmp_*"
      - "temp_*"
      - ".tmp"
    action: "delete"
    age_threshold_days: 7
  
  log_files:
    patterns:
      - "*.log"
      - "*.out"
    action: "rotate"
    destination: "logs/archived/"
    compression: true
    retention_days: 90

# Naming Conventions
naming_conventions:
  use_snake_case: true
  date_format: "YYYYMMDD"
  timestamp_format: "YYYYMMDD_HHMMSS"
  
  prefixes:
    test: "test_"
    temporary: "tmp_"
    experimental: "exp_"
    validation: "validate_"
    monitoring: "monitor_"
    deployment: "deploy_"
  
  suffixes:
    report: "_report"
    analysis: "_analysis"
    config: "_config"
    backup: "_backup"

# Enforcement Settings
enforcement:
  enabled: true
  strict_mode: false  # Will warn but not block in non-strict mode
  
  pre_commit_hooks:
    check_file_placement: true
    check_naming_conventions: true
    prevent_root_pollution: true
    auto_organize: false  # Don't auto-move files without confirmation
  
  ci_validation:
    validate_structure: true
    check_forbidden_locations: true
    report_violations: true
    fail_on_violation: false  # Set to true for strict CI

# Auto-Organization Settings
auto_organization:
  enabled: false  # Requires manual trigger for safety
  scan_interval_hours: 168  # Weekly scan
  
  triggers:
    manual: true
    on_commit: false
    on_merge: false
    scheduled: true
  
  notifications:
    email: false
    slack: false
    log: true