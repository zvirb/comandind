apiVersion: apps/v1
kind: Deployment
metadata:
  name: emergency-webui
  namespace: aiwfe
  labels:
    app: emergency-webui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: emergency-webui
  template:
    metadata:
      labels:
        app: emergency-webui
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: html-volume
        configMap:
          name: emergency-html

---
apiVersion: v1
kind: Service
metadata:
  name: emergency-webui
  namespace: aiwfe
  labels:
    app: emergency-webui
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: emergency-webui

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emergency-api
  namespace: aiwfe
  labels:
    app: emergency-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: emergency-api
  template:
    metadata:
      labels:
        app: emergency-api
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: emergency-api-config

---
apiVersion: v1
kind: Service
metadata:
  name: emergency-api
  namespace: aiwfe
  labels:
    app: emergency-api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: emergency-api

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emergency-html
  namespace: aiwfe
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>AIWFE - Emergency Mode</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
            .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            h1 { color: #333; text-align: center; }
            .status { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 4px; margin: 20px 0; }
            .btn { background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 4px; display: inline-block; margin: 10px 0; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üîß AI Workflow Engine - Emergency Mode</h1>
            <div class="status">
                <h3>‚ö†Ô∏è System Status: Emergency SSL Certificate Validation</h3>
                <p>The system is currently in emergency mode while SSL certificates are being validated and renewed.</p>
                <p><strong>Expected Resolution:</strong> 5-10 minutes</p>
            </div>
            <h3>üöÄ What's Working:</h3>
            <ul>
                <li>‚úÖ DNS Resolution</li>
                <li>‚úÖ Kubernetes Infrastructure</li>
                <li>‚úÖ Certificate Management</li>
                <li>üîÑ SSL Certificate Validation In Progress</li>
            </ul>
            <p><strong>Status:</strong> SSL certificates are being automatically renewed by Let's Encrypt.</p>
        </div>
    </body>
    </html>

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emergency-api-config
  namespace: aiwfe
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        server {
            listen 8000;
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            location /ready {
                access_log off;
                return 200 "ready\n";
                add_header Content-Type text/plain;
            }
            location /api/ {
                return 503 '{"status": "emergency_mode", "message": "API temporarily unavailable during SSL certificate validation"}';
                add_header Content-Type application/json;
            }
            location /auth/ {
                return 503 '{"status": "emergency_mode", "message": "Authentication temporarily unavailable during SSL certificate validation"}';
                add_header Content-Type application/json;
            }
            location / {
                return 200 '{"status": "emergency_mode", "message": "System operational - SSL certificate validation in progress"}';
                add_header Content-Type application/json;
            }
        }
    }