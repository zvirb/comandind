# WebStrike Command (C&C Clone) - Unified Orchestration Configuration
# Project: WSC-2025 | Duration: 20 weeks | Technology: HTML5/JavaScript/PixiJS/Colyseus/TensorFlow.js/Ollama

project_info:
  name: "WebStrike Command"
  code: "WSC-2025"
  type: "HTML5 RTS Game"
  technology_stack:
    - "HTML5/JavaScript"
    - "PixiJS (Rendering)"
    - "Colyseus (Multiplayer)"
    - "TensorFlow.js (AI/ML)"
    - "Ollama (Strategic LLM)"
  success_criteria:
    performance:
      fps_target: 60
      fps_minimum: 47
      memory_limit: "200MB baseline"
      latency_p95: "100ms"
    features:
      units_on_screen: "200+"
      ai_learning_convergence: "<1000 episodes"
      cross_browser_support: true
      mobile_responsive: true

# Phase Configuration
phases:
  phase_0:
    name: "Todo Context Integration"
    agent: "orchestration-todo-manager"
    mandatory: true
    config:
      todo_file: ".claude/orchestration_todos.json"
      context_integration: true
      priority_filtering: true
      dependency_analysis: true

  phase_1:
    name: "Agent Ecosystem Validation"
    agent: "agent-integration-orchestrator"
    config:
      required_agents:
        - "game-engine-architect"
        - "graphics-specialist" 
        - "performance-optimizer"
        - "ml-architect"
        - "network-architect"
        - "project-janitor"

  phase_2:
    name: "Strategic Intelligence Planning"
    agents:
      - "project-orchestrator"
      - "enhanced-nexus-synthesis"
    config:
      context_packages:
        rendering_context:
          max_tokens: 4000
          priority: "critical"
          focus: ["pixi", "webgl", "sprite-batching", "performance"]
        gameplay_context:
          max_tokens: 3800
          priority: "high" 
          focus: ["pathfinding", "economy", "combat", "balance"]
        ai_context:
          max_tokens: 3900
          priority: "high"
          focus: ["tensorflow", "ollama", "q-learning", "behavior-trees"]
        multiplayer_context:
          max_tokens: 3700
          priority: "medium"
          focus: ["colyseus", "webrtc", "state-sync", "anti-cheat"]

  phase_3:
    name: "Multi-Domain Research Discovery"
    parallel: true
    agents:
      - "codebase-research-analyst"
      - "game-engine-architect" 
      - "graphics-specialist"
      - "performance-profiler"
    config:
      research_domains:
        - "pixi_optimization_techniques"
        - "webgl_batching_strategies"
        - "rts_pathfinding_algorithms"
        - "browser_ml_performance"

  phase_4:
    name: "Context Synthesis & Compression"
    agents:
      - "nexus-synthesis"
      - "context-compression"
    config:
      max_tokens_per_package: 4000
      compression_targets:
        - "rendering_pipeline"
        - "game_mechanics"
        - "ai_systems" 
        - "networking"

  phase_5:
    name: "Multi-Stream Implementation"
    parallel: true
    config:
      streams:
        rendering_stream:
          agents: ["game-engine-architect", "graphics-specialist", "performance-optimizer"]
          focus: ["pixi-renderer", "sprite-batching", "camera-system", "texture-atlas"]
          deliverables: ["working renderer", "60+ fps baseline"]
          
        gameplay_stream:
          agents: ["gameplay-mechanics-specialist", "pathfinding-expert", "economy-designer"] 
          focus: ["unit-selection", "pathfinding", "resource-system", "building-system"]
          deliverables: ["core mechanics", "unit movement", "economy"]
          
        ai_stream:
          agents: ["ml-architect", "reinforcement-learning-specialist", "llm-integration-expert"]
          focus: ["tensorflow-integration", "q-learning", "ollama-integration", "behavior-trees"]
          deliverables: ["learning ai", "strategic advisor", "unit autonomy"]
          
        network_stream:
          agents: ["network-architect", "multiplayer-specialist", "security-auditor"]
          focus: ["colyseus-server", "webrtc-channels", "state-sync", "anti-cheat"]
          deliverables: ["multiplayer system", "low latency", "security"]
          
        infrastructure_stream:
          agents: ["deployment-orchestrator", "monitoring-analyst", "container-architecture-specialist"]
          focus: ["deployment-pipeline", "monitoring", "cdn-config"]
          deliverables: ["production deployment", "monitoring dashboard"]
          
        quality_stream:
          agents: ["test-automation-engineer", "user-experience-auditor", "code-quality-guardian"]
          focus: ["automated-testing", "performance-testing", "user-testing"]
          deliverables: ["test suite", "performance validation", "ux validation"]

      coordination:
        mandatory_agent: "project-janitor"
        scratch_pad: "redis"
        integration_points: ["rendering-gameplay", "ai-networking", "quality-all"]

  phase_6:
    name: "Evidence-Based Validation"
    agents:
      - "production-endpoint-validator"
      - "user-experience-auditor" 
      - "performance-profiler"
    config:
      validation_requirements:
        performance:
          - "fps >= 47 with 200+ units"
          - "memory usage < 200MB baseline"
          - "load time < 5 seconds"
        functionality:
          - "unit selection working"
          - "pathfinding functional"
          - "resource gathering operational"
          - "ai opponents responding"
        user_experience:
          - "controls responsive"
          - "camera smooth"
          - "visual feedback clear"
        evidence_types:
          - "performance screenshots"
          - "fps graphs"
          - "memory profiles"
          - "user interaction videos"

  phase_7:
    name: "Decision & Iteration Control"
    agent: "orchestration-auditor-v2"
    config:
      max_iterations: 3
      success_criteria:
        - "all validation tests pass"
        - "performance targets met"
        - "core mechanics complete"
      failure_handling:
        - "return_to_implementation"
        - "adjust_priorities"
        - "resource_reallocation"

  phase_8:
    name: "Atomic Version Control"
    agent: "atomic-git-synchronizer"
    config:
      commit_strategy: "feature-based"
      branch_naming: "wsc-{iteration}-{feature}"
      sync_requirements:
        - "all_tests_pass"
        - "code_review_approved"
        - "performance_validated"

  phase_9:
    name: "Meta-Orchestration Audit"
    agent: "orchestration-auditor"
    always_execute: true
    config:
      analysis_areas:
        - "workflow_efficiency"
        - "agent_coordination"
        - "context_management"
        - "performance_bottlenecks"
      improvement_targets:
        - "iteration_velocity"
        - "quality_metrics"
        - "resource_utilization"

  phase_10:
    name: "Production Deployment"
    agent: "deployment-orchestrator"
    config:
      deployment_strategy: "blue-green"
      environments:
        - "staging"
        - "production"
      rollback_criteria:
        - "performance_degradation"
        - "functionality_issues"
        - "user_satisfaction_drop"

  phase_11:
    name: "Production Validation"
    agents:
      - "production-endpoint-validator"
      - "user-experience-auditor"
      - "monitoring-analyst"
    config:
      health_checks:
        - endpoint: "https://webstrike.example.com/health"
        - game_server: "wss://game.webstrike.example.com"
        - cdn_assets: "https://cdn.webstrike.example.com"
      validation_criteria:
        - "all_endpoints_responding"
        - "game_server_accessible"
        - "assets_loading"
        - "multiplayer_functional"
      failure_actions:
        - "return_to_phase_0"
        - "production_failure_context"

  phase_12:
    name: "Todo Loop Control"
    agent: "orchestration-todo-manager"
    always_execute: true
    config:
      loop_control:
        high_priority_threshold: 80
        continue_criteria:
          - "critical_todos_remaining"
          - "high_priority_todos > 3"
        completion_criteria:
          - "no_critical_todos"
          - "high_priority_todos <= 2"

# Agent Specifications
agents:
  game-engine-architect:
    domain: "rendering"
    specialization: "pixi_webgl_optimization"
    tools: ["Read", "Edit", "Bash", "performance_profiling"]
    context_limit: 4000
    
  graphics-specialist:
    domain: "rendering"
    specialization: "sprite_batching_texture_management"
    tools: ["Read", "Edit", "performance_analysis"]
    context_limit: 3500
    
  performance-optimizer:
    domain: "optimization"
    specialization: "fps_memory_optimization"
    tools: ["Bash", "profiling", "benchmarking"]
    context_limit: 3000
    
  ml-architect:
    domain: "ai"
    specialization: "tensorflow_js_q_learning"
    tools: ["Read", "Edit", "Bash", "ml_validation"]
    context_limit: 4000
    
  network-architect:
    domain: "multiplayer"
    specialization: "colyseus_webrtc_optimization"
    tools: ["Read", "Edit", "Bash", "network_testing"]
    context_limit: 3500

# Context Package Templates
context_packages:
  rendering_pipeline:
    max_tokens: 4000
    structure:
      - "pixi_setup_code"
      - "sprite_batching_implementation"
      - "webgl_optimization_techniques"
      - "performance_benchmarks"
      
  game_mechanics:
    max_tokens: 3800
    structure:
      - "unit_selection_system"
      - "pathfinding_algorithms"
      - "economy_implementation"
      - "combat_mechanics"
      
  ai_learning:
    max_tokens: 3900
    structure:
      - "tensorflow_js_setup"
      - "q_learning_implementation"
      - "ollama_integration"
      - "behavior_tree_system"
      
  networking:
    max_tokens: 3700
    structure:
      - "colyseus_server_setup"
      - "webrtc_data_channels"
      - "state_synchronization"
      - "anti_cheat_measures"

# Success Metrics
validation:
  performance_targets:
    fps_minimum: 47
    memory_baseline: "200MB"
    load_time_max: "5s"
    multiplayer_latency_max: "100ms"
    
  feature_completeness:
    iteration_1: ["renderer", "camera", "basic_loop"]
    iteration_2: ["unit_selection", "pathfinding", "economy"]
    iteration_3: ["ai_learning", "ollama_integration", "behavior_trees"]
    iteration_4: ["multiplayer", "state_sync", "lobby"]
    iteration_5: ["optimization", "polish", "deployment"]
    
  quality_gates:
    code_coverage: 80
    bug_density_max: 1 # per KLOC
    user_satisfaction_min: 4.5
    crash_rate_max: 0.01

# File Organization
file_structure:
  root_limit: 15
  project_structure:
    - "src/"
    - "assets/"
    - "dist/"
    - "tests/"
    - "docs/"
    - ".claude/"
  prohibited_root_files:
    - "*.md files"
    - "report files"
  memory_mcp_usage: true
  
# Recovery & Resilience
recovery:
  checkpoint_frequency: "per_iteration"
  backup_strategy: "incremental"
  rollback_triggers:
    - "validation_failure"
    - "performance_regression"
    - "critical_bug_introduction"
    
# Learning & Improvement
learning:
  knowledge_capture:
    - "performance_optimizations_discovered"
    - "ai_training_hyperparameters"
    - "networking_latency_solutions" 
    - "deployment_best_practices"
  feedback_integration:
    - "user_testing_insights"
    - "performance_analysis_results"
    - "agent_coordination_improvements"